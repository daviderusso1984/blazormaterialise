#pragma checksum "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/Components/BM_button.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "090cbb921ccb3f11c0530b2979d88427beeb0e85"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazormaterialise
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 2 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 3 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using BlazorInputFile;

#line default
#line hidden
    public partial class BM_button : css_base
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 10 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/Components/BM_button.razor"
      

    [Parameter]
    public RenderFragment ChildContent{get;set;}
    [Parameter]
    public bool Waves_effect{get;set;} = true;
    [Parameter]
    public bool Disabled{get;set;} = false;
    [Parameter]
    public string Href { get; set; } = "";
    [Parameter]
    public enum_button Type_button{get;set;}= enum_button.Flat;
    [Parameter]
    public EventCallback<MouseEventArgs> Onclick{get;set;}


    protected async void click(MouseEventArgs ev){
        await Onclick.InvokeAsync(ev);
    }

    private string valor = "";



    private string dim = "";

    protected override void OnInitialized(){

        if(Type_button == enum_button.Flat){
            if(Waves_effect){
                valor += "waves-effect waves-teal ";
            }
        }else{
            if(Waves_effect){
                valor += "waves-effect waves-light ";
            }
        }
        if(Disabled){
            valor += "disabled ";
        }
        var btn = new button();
        valor += btn.get_button(Type_button);
        dim = "";
        dim += blazormaterialise.show.get_show(Visibility) + " ";
        dim += color.get_backcolor(color.get_color(Backcolor)) + " ";
        dim += color.get_Textcolor(color.get_color(Textcolor)) + " ";

    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
