#pragma checksum "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/forms/BM_checkbox.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4bebb79e98c1e94c63be5f4b0880b1aee0366c0d"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace blazormaterialise
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 2 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 3 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/_Imports.razor"
using BlazorInputFile;

#line default
#line hidden
    public partial class BM_checkbox : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 28 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorMaterialize/blazormaterialise/forms/BM_checkbox.razor"
          

        [Parameter]
        public string Title{get;set;} = "";

        [Parameter]
        public EventCallback<bool> Onchange{get;set;}
        [Parameter]
        public bool Value{get;set;} = false;
        [Parameter]
        public bool Filled_in{get;set;} = false;
        [Parameter]
        public bool Indeterminate{get;set;} = false;
        [Parameter]
        public bool Disable{get;set;}= false;

       

        private string _class = "";

      

       

        protected override async Task OnAfterRenderAsync(bool firstRender){
            await base.OnAfterRenderAsync(firstRender);            
            if(Filled_in && _class==""){
                _class = "filled-in ";
                this.StateHasChanged();
            }
           

        }


        protected void Change(ChangeEventArgs e){
            Onchange.InvokeAsync((bool)e.Value);
        }    

    

#line default
#line hidden
    }
}
#pragma warning restore 1591
