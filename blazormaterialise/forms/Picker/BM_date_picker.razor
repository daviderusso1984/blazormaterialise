@namespace blazormaterialise
@inject IJSRuntime JSRuntime;



<input type="text" class="datepicker" @onchange="@((ChangeEventArgs __e) => onch(__e.Value.ToString()))">


@code{
    [Parameter]
    public string Date_in{get;set;} = "";
    
    public string _format = "";
    [Parameter]
    public enum_date Format{get;set;} = enum_date.ddmmyyyy;

    [Parameter]
    public EventCallback<string> Date_out{get;set;}
     protected override async Task OnAfterRenderAsync (bool firstRender) {
        await base.OnAfterRenderAsync (firstRender);
        switch (Format)
        {
            case enum_date.ddmmyyyy:
            _format = "dd mm yyyy";
            break;
            case enum_date.yyyymmdd:
            _format = "yyyy mm dd";
            break;
            default:
            break;
        }
        await JSRuntime.InvokeVoidAsync("datepicker_init",_format,Date_in);
        
    }

    private string convert_date(string format , string dat){
        string[] spl = format.Split(null);
        string[] spl_dat = dat.Split();
        string day = "";
        string month = "";
        string year = "";
        if(spl[0].Contains('d')){
            //day
            day = spl_dat[0];            
        }
        if(spl[1].Contains('d')){
            //day
            day = spl_dat[1];            
        }
        if(spl[2].Contains('d')){
            //day
            day = spl_dat[2];            
        }
         if(spl[0].Contains('m')){
            //day
            month = spl_dat[0];            
        }
        if(spl[1].Contains('m')){
            //day
            month = spl_dat[1];            
        }
        if(spl[2].Contains('m')){
            //day
            month = spl_dat[2];            
        }
         if(spl[0].Contains('y')){
            //day
            year = spl_dat[0];            
        }
        if(spl[1].Contains('y')){
            //day
            year = spl_dat[1];            
        }
        if(spl[2].Contains('y')){
            //day
            year = spl_dat[2];            
        }
        if(day.Length == 1){
           
        }
        return "";
    }

    private void onch(string value){
        Date_out.InvokeAsync(value);
    }

    /*
        d	Date of the month.	1-31
        dd	Date of the month (2 digits).	01-31
        ddd	Day of the week in short form set by the i18n option.	Sun-Sat
dddd	Day of the week in full form set by the i18n option.	Sunday-Saturday
m	Month of the year.	1-12
mm	Month of the year (2 digits).	01-12
mmm	Month of the year in short form set by the i18n option.	Jan-Dec
mmmm	Month of the year in full form set by the i18n option.	January-December
yy	2-digit year.	17
yyyy	4-digit year.	2017
    */
}