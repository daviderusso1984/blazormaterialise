@namespace blazormaterialise
@inject IJSRuntime JSRuntime;
@inherits css_base


<a class="@valor @Class @dim" id="@Id" ref="@Ref" @onclick="click">
    @ChildContent
</a>

@code{

    [Parameter]
    public RenderFragment ChildContent{get;set;}
    [Parameter]
    public bool Waves_effect{get;set;} = true;
    [Parameter]
    public bool Disabled{get;set;} = false;
    [Parameter]
    public enum_button Type_button{get;set;}= enum_button.Flat;
    [Parameter]
    public EventCallback<MouseEventArgs> Onclick{get;set;}


    protected async void click(MouseEventArgs ev){
       await Onclick.InvokeAsync(ev);
    }

    private string valor = "";

   

    private string dim = "";

    protected override void OnInitialized(){
        
         if(Type_button == enum_button.Flat){
            if(Waves_effect){
            valor += "waves-effect waves-teal ";
        }
        }else{
            if(Waves_effect){
            valor += "waves-effect waves-light ";
        }
        }
        if(Disabled){
            valor += "disabled ";
        }        
        var btn = new button();
        valor += btn.get_button(Type_button);
        dim += blazormaterialise.show.get_show(Visibility) + " ";
        dim += color.get_backcolor(Backcolor) + " "; 
        dim += color.get_Textcolor(Textcolor) + " ";
        
    }
}