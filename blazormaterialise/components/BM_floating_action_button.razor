@namespace blazormaterialise
@inherits css_base
@inject IJSRuntime JSRuntime;



<div class="fixed-action-btn @Class ">
  <a class="btn-floating btn-large ">
    <i class="large material-icons">@Icon</i>
  </a>
  <ul>
      @if(Items_floating != null){
          @foreach (var item in Items_floating)
          {
              <li><a class="btn-floating @color.get_color(item.color)" href="@item.href"><i class="material-icons">@item.icon</i></a></li>
          }
      }   
  </ul>
</div>

@code{
    [Parameter]
    public string Icon{get;set;}
    [Parameter]
    public structure_floating[] Items_floating{get;set;}

    private string dim="";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dim = "";
        dim += blazormaterialise.show.get_show(Visibility) + " ";
        dim += color.get_backcolor(color.get_color(Backcolor)) + " ";
        dim += color.get_Textcolor(color.get_color(Textcolor)) + " ";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender){
        await base.OnAfterRenderAsync(firstRender);
        await JSRuntime.InvokeVoidAsync("bm_floating",Id);

    }



}
